openapi: 3.0.0
info:
    title: CCMS
    description: |
        This API is used for communication between CCMS (Campus Complaint Management System) server and client.
    version: 0.0.1
paths:
    /login:
        post:
            summary: Login to user account
            description: Get username and password and authenticate the user.
                Returns sessionId for further requests
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - username
                                - password
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                required: true
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: string
                "403":
                    description: "Forbidden"
    /usersDetail:
        get:
            summary: Get details of all user.
            description: Get details like username, id, status, role, email, dateRegistered of all the users including
                resolver and admin. Return all details as list of json.
            operationId: usersDetail
            responses:
                '200':
                    description: 'OK'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserDetailsList'
    /userDetailUpdate:
        post:
            summary: post the updated details of user.
            description: post the updated details of the user.
            operationId: userDetailUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - userId
                                - userName
                                - email
                                - role
                                - status
                                - dateRegistered
                            properties:
                                userId:
                                    type: integer
                                userName:
                                    type: string
                                email:
                                    type: string
                                role:
                                    type: string
                                status:
                                    type: string
                                dateRegistered:
                                    type: string
                required: true
            responses:
                '200':
                    description: 'OK'
                '403':
                    description: 'Forbidden'


components:
    schemas:
        UserDetailsList:
            type: array
            items:
                $ref: '#/components/schemas/UsersDetail'
        UsersDetail:
            type: object
            properties:
                userId:
                    type: integer
                userName:
                    type: string
                email:
                    type: string
                role:
                    type: string
                status:
                    type: string
                dateRegistered:
                    type: string


servers:
    - url: http://13.233.99.87:8080
