openapi: 3.0.0
info:
    title: CCMS
    description: |
        This API is used for communication between CCMS (Campus Complaint Management System) server and client.
    version: 0.0.2

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

security:
    - bearerAuth: []

paths:
    /login:
        post:
            summary: Login to user account
            description: Get username and password and authenticate the user.
                Returns sessionId for further requests
            operationId: login
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - username
                                - password
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                required: true
            responses:
                "200":
                    description: "OK"
                    content:
                        text/plain:
                            schema:
                                type: string
                "403":
                    description: "Forbidden"

    /announcements:
        $ref: "./paths/announcements.yaml"

    /announcements/new:
        $ref: "./paths/new_announcement.yaml"

    /announcements/update:
        $ref: "./paths/update_announcement.yaml"

    /complain_overview:
        $ref: "./paths/complain_overview.yaml"

    /submit_complain:
        $ref: "./paths/submit_complaint.yaml"

    /usersDetail:
        $ref: "./paths/users_detail.yaml"

    /userDetailUpdate:
        $ref: "./paths/user_detail_update.yaml"

    /getComplaintInfo/{id}:
        $ref: "./paths/get_complaint_info.yaml"

    /resolution_submit:
        $ref: "./paths/resolution_submit.yaml"

#    /upload/image:
#        post:
#            operationId: uploadFile
#            summary: Upload Image
#            description: |
#                Uploads an image and returns its corresponding file ID.
#            requestBody:
#                required: true
#                content:
#                    image/*:
#                        schema:
#                            type: string
#                            format: binary
#            responses:
#                '200':
#                    description: Successful response
#                    content:
#                        text/plain:
#                            schema:
#                                type: string
#                                minLength: 40
#                                maxLength: 40
#                '400':
#                    description: Bad request
#                '500':
#                    description: Internal server error
#
#    /download/image/{fileId}:
#        get:
#            operationId: downloadFile
#            summary: Download Image
#            description: |
#                Downloads the image corresponding to the provided file ID.
#            parameters:
#                -   in: path
#                    name: fileId
#                    required: true
#                    description: The ID of the file to download
#                    schema:
#                        type: string
#            responses:
#                "200":
#                    content:
#                        image/*:
#                            schema:
#                                type: string
#                                format: binary
#                    description: Successful response
#                "404":
#                    description: File not found
#                "500":
#                    description: Internal server error
    /createUser:
        $ref: "./paths/create_user.yaml"

    /deleteUser:
        $ref: "./paths/delete_user.yaml"

    /upload/image:
        $ref: "./paths/upload_image.yaml"
       
    # /download/image/{fileId}:
    #     $ref: "./paths/download_image.yaml"

servers:
    -   url: http://localhost:8080
